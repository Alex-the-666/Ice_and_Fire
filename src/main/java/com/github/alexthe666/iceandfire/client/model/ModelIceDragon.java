package com.github.alexthe666.iceandfire.client.model;

import com.github.alexthe666.iceandfire.client.model.util.LegArticulator;
import com.github.alexthe666.iceandfire.entity.EntityIceDragon;
import net.ilexiconn.llibrary.LLibrary;
import net.ilexiconn.llibrary.client.model.ModelAnimator;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.ilexiconn.llibrary.server.animation.IAnimatedEntity;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;

import java.util.Arrays;

public class ModelIceDragon extends ModelDragonBase {
	public AdvancedModelRenderer BodyUpper;
	public AdvancedModelRenderer BodyLower;
	public AdvancedModelRenderer Neck1;
	public AdvancedModelRenderer ArmR1;
	public AdvancedModelRenderer ArmL1;
	public AdvancedModelRenderer Spike5;
	public AdvancedModelRenderer Spike6;
	public AdvancedModelRenderer Spike7;
	public AdvancedModelRenderer Tail1;
	public AdvancedModelRenderer ThighR;
	public AdvancedModelRenderer ThighL;
	public AdvancedModelRenderer Spike8;
	public AdvancedModelRenderer Spike9;
	public AdvancedModelRenderer Tail2;
	public AdvancedModelRenderer Spike10;
	public AdvancedModelRenderer Tail3;
	public AdvancedModelRenderer Spike11;
	public AdvancedModelRenderer Spike12;
	public AdvancedModelRenderer Tail4;
	public AdvancedModelRenderer Spike13;
	public AdvancedModelRenderer Spike14;
	public AdvancedModelRenderer Spike15;
	public AdvancedModelRenderer Club;
	public AdvancedModelRenderer Spike16;
	public AdvancedModelRenderer Spike17;
	public AdvancedModelRenderer Spike18;
	public AdvancedModelRenderer TailFin2;
	public AdvancedModelRenderer TailFin1;
	public AdvancedModelRenderer LegR;
	public AdvancedModelRenderer ToeR2;
	public AdvancedModelRenderer ToeR3;
	public AdvancedModelRenderer ToeR1;
	public AdvancedModelRenderer LegL;
	public AdvancedModelRenderer ToeL2;
	public AdvancedModelRenderer ToeL1;
	public AdvancedModelRenderer ToeL3;
	public AdvancedModelRenderer Neck2;
	public AdvancedModelRenderer Spike4;
	public AdvancedModelRenderer Neck3;
	public AdvancedModelRenderer Spike2;
	public AdvancedModelRenderer Spike3;
	public AdvancedModelRenderer Spike1;
	public AdvancedModelRenderer Head;
	public AdvancedModelRenderer HeadFront;
	public AdvancedModelRenderer HornL;
	public AdvancedModelRenderer HornR;
	public AdvancedModelRenderer HornL3;
	public AdvancedModelRenderer HornR3;
	public AdvancedModelRenderer HornR4;
	public AdvancedModelRenderer HornL4;
	public AdvancedModelRenderer JawBottom;
	public AdvancedModelRenderer HornFront;
	public AdvancedModelRenderer HornL2;
	public AdvancedModelRenderer HornR2;
	public AdvancedModelRenderer Teeth1;
	public AdvancedModelRenderer Teeth2;
	public AdvancedModelRenderer Rmembrane1;
	public AdvancedModelRenderer ArmR2;
	public AdvancedModelRenderer Rmembrane2;
	public AdvancedModelRenderer FingerR1;
	public AdvancedModelRenderer FingerR3;
	public AdvancedModelRenderer FingerR4;
	public AdvancedModelRenderer ClawR;
	public AdvancedModelRenderer FingerR2;
	public AdvancedModelRenderer Rmembrane4;
	public AdvancedModelRenderer Rmembrane3;
	public AdvancedModelRenderer ClawR2;
	public AdvancedModelRenderer ClawR3;
	public AdvancedModelRenderer ArmL2;
	public AdvancedModelRenderer Lmembrane1;
	public AdvancedModelRenderer FingerL1;
	public AdvancedModelRenderer FingerL4;
	public AdvancedModelRenderer FingerL3;
	public AdvancedModelRenderer Lmembrane2;
	public AdvancedModelRenderer ClawL;
	public AdvancedModelRenderer ClawLPivot;
	public AdvancedModelRenderer ClawRPivot;
	public AdvancedModelRenderer FingerL2;
	public AdvancedModelRenderer Lmembrane4;
	public AdvancedModelRenderer Lmembrane3;
	public AdvancedModelRenderer ClawL2;
	public AdvancedModelRenderer ClawL3;
	public ModelAnimator animator;

	public ModelIceDragon() {
		this.textureWidth = 256;
		this.textureHeight = 128;
		this.FingerL1 = new AdvancedModelRenderer(this, 128, 19);
		this.FingerL1.setRotationPoint(-11.7F, -0.1F, 0.3F);
		this.FingerL1.addBox(-16.0F, -0.5F, -1.0F, 16, 1, 2, 0.0F);
		this.setRotateAngle(FingerL1, 0.0F, -1.48352986419518F, 0.015707963267948967F);
		this.FingerR1 = new AdvancedModelRenderer(this, 128, 19);
		this.FingerR1.setRotationPoint(-11.7F, -0.1F, -0.3F);
		this.FingerR1.addBox(-16.0F, -0.5F, -1.0F, 16, 1, 2, 0.0F);
		this.setRotateAngle(FingerR1, -0.0F, 1.48352986419518F, 0.015707963267948967F);
		this.ArmR2 = new AdvancedModelRenderer(this, 132, 11);
		this.ArmR2.setRotationPoint(-9.6F, 0.0F, -0.6F);
		this.ArmR2.addBox(-12.5F, -1.0F, -1.5F, 13, 2, 3, 0.0F);
		this.setRotateAngle(ArmR2, 0.08726646259971647F, -0.8552113334772213F, 0.0F);
		this.Teeth1 = new AdvancedModelRenderer(this, -1, 16);
		this.Teeth1.mirror = true;
		this.Teeth1.setRotationPoint(0.0F, -0.3F, 0.0F);
		this.Teeth1.addBox(-2.01F, -2.1F, -5.51F, 4, 2, 5, 0.0F);
		this.FingerR2 = new AdvancedModelRenderer(this, 128, 24);
		this.FingerR2.setRotationPoint(-15.2F, 0.1F, -0.2F);
		this.FingerR2.addBox(-10.0F, -0.5F, -1.0F, 10, 1, 2, 0.0F);
		this.setRotateAngle(FingerR2, -0.0F, 0.3590142271352336F, 0.0F);
		this.ClawL3 = new AdvancedModelRenderer(this, 128, 61);
		this.ClawL3.mirror = true;
		this.ClawL3.setRotationPoint(0.0F, 0.0F, 0.0F);
		this.ClawL3.addBox(-0.8F, 0.7F, 0.0F, 2, 1, 1, 0.0F);
		this.ClawR2 = new AdvancedModelRenderer(this, 128, 52);
		this.ClawR2.mirror = true;
		this.ClawR2.setRotationPoint(2.0F, 0.0F, 0.0F);
		this.ClawR2.addBox(-0.3F, -0.8F, -1.0F, 2, 2, 1, 0.0F);
		this.Neck1 = new AdvancedModelRenderer(this, 57, 43);
		this.Neck1.setRotationPoint(-0.5F, 0.5F, 1.8F);
		this.Neck1.addBox(-1.5F, -2.0F, -5.0F, 4, 6, 4, 0.0F);
		this.setRotateAngle(Neck1, 0.045553093477052F, -0.0F, 0.0F);
		this.Spike16 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike16.setRotationPoint(0.0F, -0.3F, 3.8F);
		this.Spike16.addBox(-0.5F, -0.5F, -0.2F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike16, 0.8178612874845427F, -0.0F, 0.0F);
		this.LegR = new AdvancedModelRenderer(this, 15, 23);
		this.LegR.setRotationPoint(0.0F, 4.3F, 1.9F);
		this.LegR.addBox(-1.0F, -0.5F, 0.0F, 2, 7, 2, 0.0F);
		this.setRotateAngle(LegR, -0.33108895910332425F, -0.0F, 0.0F);
		this.ToeR1 = new AdvancedModelRenderer(this, 1, 63);
		this.ToeR1.setRotationPoint(1.0F, 6.1F, 0.7F);
		this.ToeR1.addBox(-0.5F, -0.8F, -4.0F, 1, 2, 5, 0.0F);
		this.setRotateAngle(ToeR1, 0.5347688828110626F, 0.0F, 0.0F);
		this.Rmembrane1 = new AdvancedModelRenderer(this, 0, 78);
		this.Rmembrane1.setRotationPoint(-4.5F, 0.0F, 0.0F);
		this.Rmembrane1.addBox(-4.5F, 0.0F, 1.4F, 9, 0, 8, 0.0F);
		this.ClawL2 = new AdvancedModelRenderer(this, 128, 52);
		this.ClawL2.mirror = true;
		this.ClawL2.setRotationPoint(2.0F, 0.0F, 0.0F);
		this.ClawL2.addBox(-0.3F, -0.8F, 0.0F, 2, 2, 1, 0.0F);
		this.Rmembrane2 = new AdvancedModelRenderer(this, 34, 74);
		this.Rmembrane2.setRotationPoint(-5.5F, 0.0F, 0.0F);
		this.Rmembrane2.addBox(-7.5F, -0.1F, 1.21F, 15, 0, 12, 0.0F);
		this.setRotateAngle(Rmembrane2, 0.0F, 0.6108652381980153F, 0.0F);
		this.Spike1 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike1.setRotationPoint(0.5F, 0.0F, -3.4F);
		this.Spike1.addBox(-0.5F, -0.1F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike1, 0.8178612874845427F, -0.0F, 0.0F);
		this.Tail2 = new AdvancedModelRenderer(this, 97, 33);
		this.Tail2.setRotationPoint(0.0F, -0.1F, 5.8F);
		this.Tail2.addBox(-2.01F, -1.6F, 0.9F, 4, 4, 8, 0.0F);
		this.setRotateAngle(Tail2, -0.091106186954104F, -0.0F, 0.0F);
		this.ToeR2 = new AdvancedModelRenderer(this, 1, 63);
		this.ToeR2.setRotationPoint(0.0F, 6.0F, -0.2F);
		this.ToeR2.addBox(-0.5F, -0.8F, -4.0F, 1, 2, 5, 0.0F);
		this.setRotateAngle(ToeR2, 0.6436539526952666F, 0.0F, 0.0F);
		this.Teeth2 = new AdvancedModelRenderer(this, -1, 16);
		this.Teeth2.setRotationPoint(0.0F, -0.3F, 0.0F);
		this.Teeth2.addBox(-1.91F, -2.1F, -5.51F, 4, 2, 5, 0.0F);
		this.ClawL = new AdvancedModelRenderer(this, 128, 44);
		this.ClawL.mirror = true;
		this.ClawL.addBox(-0.3F, -0.8F, 0.0F, 2, 2, 1, 0.0F);
		this.ClawLPivot = new AdvancedModelRenderer(this, 128, 44);
		this.ClawLPivot.setRotationPoint(-11.5F, 0.0F, 0.9F);
		this.setRotateAngle(ClawLPivot, 3.141592653589793F, -0.8726646259971648F, -2.6179938779914944F);
		this.Spike7 = new AdvancedModelRenderer(this, 22, 34);
		this.Spike7.mirror = true;
		this.Spike7.setRotationPoint(0.0F, -1.0F, 6.5F);
		this.Spike7.addBox(-0.5F, 0.1F, 0.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(Spike7, 0.8178612874845427F, -0.0F, 0.0F);
		this.Spike15 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike15.setRotationPoint(0.0F, -0.6F, 8.9F);
		this.Spike15.addBox(-0.5F, -0.5F, -0.2F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike15, 0.8178612874845427F, -0.0F, 0.0F);
		this.Spike14 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike14.setRotationPoint(0.0F, -0.8F, 5.5F);
		this.Spike14.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike14, 0.8178612874845427F, -0.0F, 0.0F);
		this.Neck2 = new AdvancedModelRenderer(this, 42, 44);
		this.Neck2.setRotationPoint(0.0F, -0.8F, -3.7F);
		this.Neck2.addBox(-1.0F, -0.8F, -5.0F, 3, 5, 4, 0.0F);
		this.setRotateAngle(Neck2, -0.091106186954104F, -0.0F, 0.0F);
		this.FingerL2 = new AdvancedModelRenderer(this, 128, 24);
		this.FingerL2.setRotationPoint(-15.2F, 0.1F, -0.2F);
		this.FingerL2.addBox(-10.0F, -0.5F, -0.7F, 10, 1, 2, 0.0F);
		this.setRotateAngle(FingerL2, -0.0F, -0.3590142271352336F, 0.0F);
		this.ThighR = new AdvancedModelRenderer(this, 0, 23);
		this.ThighR.setRotationPoint(-3.7F, 1.6F, 6.0F);
		this.ThighR.addBox(-1.43F, -0.5F, -2.0F, 3, 7, 4, 0.0F);
		this.setRotateAngle(ThighR, -0.19198621771937624F, -0.0F, 0.0F);
		this.HornL3 = new AdvancedModelRenderer(this, 37, 29);
		this.HornL3.mirror = true;
		this.HornL3.setRotationPoint(2.4F, 0.4F, -0.8F);
		this.HornL3.addBox(-0.4F, 0.0F, 0.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(HornL3, -0.17453292519943295F, 0.3141592653589793F, 0.0F);
		this.Neck3 = new AdvancedModelRenderer(this, 25, 64);
		this.Neck3.setRotationPoint(0.0F, 0.0F, -3.9F);
		this.Neck3.addBox(-1.0F, -0.6F, -7.0F, 3, 4, 6, 0.0F);
		this.setRotateAngle(Neck3, 0.03717551306747922F, -0.0F, 0.0F);
		this.Rmembrane3 = new AdvancedModelRenderer(this, 88, 74);
		this.Rmembrane3.setRotationPoint(-5.6F, 0.0F, 0.3F);
		this.Rmembrane3.addBox(-7.0F, -0.3F, -13.0F, 14, 0, 12, 0.0F);
		this.setRotateAngle(Rmembrane3, 3.141592653589793F, 3.141592653589793F, 3.141592653589793F);
		this.HornR = new AdvancedModelRenderer(this, 59, 34);
		this.HornR.setRotationPoint(-2.6F, -1.1F, -1.0F);
		this.HornR.addBox(-0.4F, -0.5F, 0.0F, 1, 2, 4, 0.0F);
		this.setRotateAngle(HornR, 0.17453292519943295F, -0.33161255787892263F, -0.19198621771937624F);
		this.Club = new AdvancedModelRenderer(this, 42, 17);
		this.Club.setRotationPoint(0.0F, -0.4F, 7.5F);
		this.Club.addBox(-2.0F, -0.4F, 1.0F, 4, 2, 8, 0.0F);
		this.setRotateAngle(Club, 0.09704030641088471F, -0.0F, 0.0F);
		this.Lmembrane2 = new AdvancedModelRenderer(this, 34, 74);
		this.Lmembrane2.mirror = true;
		this.Lmembrane2.setRotationPoint(-5.5F, 0.0F, 0.0F);
		this.Lmembrane2.addBox(-7.5F, -0.1F, 1.21F, 15, 0, 12, 0.0F);
		this.setRotateAngle(Lmembrane2, 0.0F, 2.530727415391778F, 0.0F);
		this.Spike4 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike4.setRotationPoint(0.5F, -1.6F, -3.2F);
		this.Spike4.addBox(-0.5F, 0.1F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike4, 0.8178612874845427F, -0.0F, 0.0F);
		this.HornR3 = new AdvancedModelRenderer(this, 37, 29);
		this.HornR3.setRotationPoint(-2.5F, 0.4F, -0.9F);
		this.HornR3.addBox(-0.4F, 0.0F, 0.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(HornR3, -0.17453292519943295F, -0.3141592653589793F, 0.0F);
		this.ClawR = new AdvancedModelRenderer(this, 128, 44);
		this.ClawR.mirror = true;
		this.ClawR.addBox(-0.3F, -0.8F, -1.0F, 2, 2, 1, 0.0F);
		this.ClawRPivot = new AdvancedModelRenderer(this, 128, 44);
		this.ClawRPivot.setRotationPoint(-11.5F, 0.0F, -0.9F);
		this.setRotateAngle(ClawRPivot, 3.141592653589793F, 0.8726646259971648F, -2.6179938779914944F);
		this.ThighL = new AdvancedModelRenderer(this, 0, 23);
		this.ThighL.mirror = true;
		this.ThighL.setRotationPoint(3.7F, 1.6F, 6.0F);
		this.ThighL.addBox(-1.43F, -0.5F, -2.0F, 3, 7, 4, 0.0F);
		this.setRotateAngle(ThighL, -0.19198621771937624F, -0.0F, 0.0F);
		this.HornFront = new AdvancedModelRenderer(this, 60, 35);
		this.HornFront.setRotationPoint(0.0F, -1.7F, -5.0F);
		this.HornFront.addBox(-0.5F, -0.4F, -0.4F, 1, 2, 3, 0.0F);
		this.setRotateAngle(HornFront, 0.6373942428283291F, 0.0F, 0.0F);
		this.HornL = new AdvancedModelRenderer(this, 59, 34);
		this.HornL.mirror = true;
		this.HornL.setRotationPoint(2.3F, -1.4F, -1.0F);
		this.HornL.addBox(-0.4F, -0.5F, 0.0F, 1, 2, 4, 0.0F);
		this.setRotateAngle(HornL, 0.17453292519943295F, 0.33161255787892263F, 0.19198621771937624F);
		this.Spike8 = new AdvancedModelRenderer(this, 22, 34);
		this.Spike8.setRotationPoint(0.0F, -0.8F, 2.8F);
		this.Spike8.addBox(-0.5F, 0.1F, 0.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(Spike8, 0.8178612874845427F, -0.0F, 0.0F);
		this.Tail3 = new AdvancedModelRenderer(this, 72, 21);
		this.Tail3.setRotationPoint(0.0F, -0.1F, 7.7F);
		this.Tail3.addBox(-2.0F, -1.3F, 0.9F, 4, 3, 9, 0.0F);
		this.setRotateAngle(Tail3, 0.091106186954104F, 0.0F, 0.0F);
		this.Spike13 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike13.setRotationPoint(0.0F, -0.9F, 2.0F);
		this.Spike13.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike13, 0.8178612874845427F, -0.0F, 0.0F);
		this.Spike9 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike9.setRotationPoint(0.0F, -0.9F, 6.5F);
		this.Spike9.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike9, 0.8178612874845427F, -0.0F, 0.0F);
		this.ToeL2 = new AdvancedModelRenderer(this, 1, 63);
		this.ToeL2.setRotationPoint(0.0F, 6.0F, -0.2F);
		this.ToeL2.addBox(-0.5F, -0.8F, -4.0F, 1, 2, 5, 0.0F);
		this.setRotateAngle(ToeL2, 0.6436774281355088F, 0.0F, 0.0F);
		this.ArmL1 = new AdvancedModelRenderer(this, 132, 3);
		this.ArmL1.mirror = true;
		this.ArmL1.setRotationPoint(2.2F, 0.0F, 2.7F);
		this.ArmL1.addBox(-9.5F, -1.0F, -1.5F, 9, 2, 4, 0.0F);
		this.setRotateAngle(ArmL1, -0.4886921905584123F, 3.07177948351002F, 0.3490658503988659F);
		this.HornR2 = new AdvancedModelRenderer(this, 46, 36);
		this.HornR2.setRotationPoint(-0.4F, 0.3F, 3.6F);
		this.HornR2.addBox(-0.01F, -0.8F, -0.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(HornR2, -0.07504915783575616F, 0.0F, 0.0F);
		this.Lmembrane1 = new AdvancedModelRenderer(this, 0, 78);
		this.Lmembrane1.mirror = true;
		this.Lmembrane1.setRotationPoint(-4.5F, 0.0F, 0.0F);
		this.Lmembrane1.addBox(-4.5F, 0.0F, 1.4F, 9, 0, 8, 0.0F);
		this.setRotateAngle(Lmembrane1, 0.0F, 3.141592653589793F, 0.0F);
		this.HeadFront = new AdvancedModelRenderer(this, 27, 112);
		this.HeadFront.mirror = true;
		this.HeadFront.setRotationPoint(0.0F, 0.2F, -3.5F);
		this.HeadFront.addBox(-2.0F, -2.1F, -5.7F, 4, 3, 5, 0.0F);
		this.Spike18 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike18.setRotationPoint(0.0F, 0.0F, 3.0F);
		this.Spike18.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike18, 0.40980330836826856F, -0.0F, 0.0F);
		this.JawBottom = new AdvancedModelRenderer(this, 55, 99);
		this.JawBottom.mirror = true;
		this.JawBottom.setRotationPoint(0.0F, 1.8F, -3.9F);
		this.JawBottom.addBox(-2.0F, -0.6F, -5.5F, 4, 1, 6, 0.0F);
		this.setRotateAngle(JawBottom, -0.13962634015954636F, 0.0F, 0.0F);
		this.Tail4 = new AdvancedModelRenderer(this, 100, 20);
		this.Tail4.setRotationPoint(0.0F, -0.2F, 8.6F);
		this.Tail4.addBox(-1.5F, -0.9F, 1.0F, 3, 2, 8, 0.0F);
		this.setRotateAngle(Tail4, 0.0036651914291880917F, -0.0F, 0.0F);
		this.LegL = new AdvancedModelRenderer(this, 15, 23);
		this.LegL.mirror = true;
		this.LegL.setRotationPoint(0.0F, 4.3F, 1.9F);
		this.LegL.addBox(-1.0F, -0.5F, 0.0F, 2, 7, 2, 0.0F);
		this.setRotateAngle(LegL, -0.33108895910332425F, -0.0F, 0.0F);
		this.Spike5 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike5.setRotationPoint(0.0F, -1.5F, 1.0F);
		this.Spike5.addBox(-0.5F, -0.1F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike5, 0.8178612874845427F, -0.0F, 0.0F);
		this.Spike2 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike2.setRotationPoint(0.5F, -0.1F, -4.5F);
		this.Spike2.addBox(-0.5F, -0.1F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike2, 0.8178612874845427F, -0.0F, 0.0F);
		this.Spike6 = new AdvancedModelRenderer(this, 22, 34);
		this.Spike6.setRotationPoint(0.0F, -1.1F, 3.5F);
		this.Spike6.addBox(-0.5F, -0.4F, 0.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(Spike6, 0.8178612874845427F, -0.0F, 0.0F);
		this.Spike10 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike10.setRotationPoint(0.0F, -1.6F, 4.6F);
		this.Spike10.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike10, 0.8178612874845427F, -0.0F, 0.0F);
		this.Spike17 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike17.setRotationPoint(0.0F, -0.5F, 7.3F);
		this.Spike17.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike17, 0.8178612874845427F, -0.0F, 0.0F);
		this.ToeR3 = new AdvancedModelRenderer(this, 1, 63);
		this.ToeR3.setRotationPoint(-1.0F, 6.1F, 0.7F);
		this.ToeR3.addBox(-0.5F, -0.8F, -4.0F, 1, 2, 5, 0.0F);
		this.setRotateAngle(ToeR3, 0.5347688828110626F, 1.743934249004316E-17F, 0.0F);
		this.ToeL3 = new AdvancedModelRenderer(this, 1, 63);
		this.ToeL3.setRotationPoint(-1.0F, 6.1F, 0.7F);
		this.ToeL3.addBox(-0.5F, -0.8F, -4.0F, 1, 2, 5, 0.0F);
		this.setRotateAngle(ToeL3, 0.5347688828110626F, 0.0F, 0.0F);
		this.Tail1 = new AdvancedModelRenderer(this, 75, 35);
		this.Tail1.setRotationPoint(0.0F, 0.8F, 5.5F);
		this.Tail1.addBox(-2.5F, -2.0F, 1.0F, 5, 5, 6, 0.0F);
		this.setRotateAngle(Tail1, -0.136659280431156F, -0.0F, 0.0F);
		this.FingerR3 = new AdvancedModelRenderer(this, 128, 31);
		this.FingerR3.setRotationPoint(-8.3F, 0.0F, 0.2F);
		this.FingerR3.addBox(-17.0F, -0.5F, -1.0F, 16, 1, 2, 0.0F);
		this.setRotateAngle(FingerR3, 0.0F, 1.9198621771937625F, 0.0F);
		this.HornR4 = new AdvancedModelRenderer(this, 36, 28);
		this.HornR4.setRotationPoint(-0.9F, -2.0F, -1.4F);
		this.HornR4.addBox(-0.4F, 0.0F, 0.0F, 1, 1, 4, 0.0F);
		this.setRotateAngle(HornR4, 0.40980330836826856F, -0.2617993877991494F, 0.0F);
		this.BodyLower = new AdvancedModelRenderer(this, 93, 47);
		this.BodyLower.setRotationPoint(0.0F, 10.99F, -3.33F);
		this.BodyLower.addBox(-3.5F, -1.5F, 0.0F, 7, 6, 7, 0.0F);
		this.setRotateAngle(BodyLower, -0.045553093477052F, -0.0F, 0.0F);
		this.HornL4 = new AdvancedModelRenderer(this, 36, 28);
		this.HornL4.mirror = true;
		this.HornL4.setRotationPoint(0.9F, -2.0F, -1.4F);
		this.HornL4.addBox(-0.4F, 0.0F, 0.0F, 1, 1, 4, 0.0F);
		this.setRotateAngle(HornL4, 0.40980330836826856F, 0.2617993877991494F, 0.0F);
		this.Rmembrane4 = new AdvancedModelRenderer(this, 139, 71);
		this.Rmembrane4.setRotationPoint(-0.2F, 0.0F, 0.0F);
		this.Rmembrane4.addBox(-25.0F, -0.1F, 1.0F, 26, 0, 15, 0.0F);
		this.setRotateAngle(Rmembrane4, -0.0F, 0.003490658503988659F, 0.0F);
		this.HornL2 = new AdvancedModelRenderer(this, 46, 36);
		this.HornL2.mirror = true;
		this.HornL2.setRotationPoint(-0.4F, 0.3F, 3.6F);
		this.HornL2.addBox(-0.01F, -0.8F, -0.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(HornL2, -0.07504915783575616F, 0.0F, 0.0F);
		this.ToeL1 = new AdvancedModelRenderer(this, 1, 63);
		this.ToeL1.setRotationPoint(1.0F, 6.1F, 0.7F);
		this.ToeL1.addBox(-0.5F, -0.8F, -4.0F, 1, 2, 5, 0.0F);
		this.setRotateAngle(ToeL1, 0.5347688828110626F, 0.0F, 0.0F);
		this.Spike3 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike3.setRotationPoint(0.5F, -0.3F, -2.0F);
		this.Spike3.addBox(-0.5F, -0.1F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike3, 0.9032078879070654F, -0.0F, 0.0F);
		this.ArmL2 = new AdvancedModelRenderer(this, 132, 11);
		this.ArmL2.mirror = true;
		this.ArmL2.setRotationPoint(-9.6F, 0.0F, 0.6F);
		this.ArmL2.addBox(-12.5F, -1.0F, -1.5F, 13, 2, 3, 0.0F);
		this.setRotateAngle(ArmL2, -0.08726646259971647F, 0.8552113334772213F, 0.0F);
		this.Spike11 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike11.setRotationPoint(0.0F, -1.2F, 2.3F);
		this.Spike11.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike11, 0.8178612874845427F, -0.0F, 0.0F);
		this.ClawR3 = new AdvancedModelRenderer(this, 128, 61);
		this.ClawR3.mirror = true;
		this.ClawR3.setRotationPoint(0.0F, 0.0F, 0.0F);
		this.ClawR3.addBox(-0.8F, 0.7F, -1.0F, 2, 1, 1, 0.0F);
		this.Lmembrane3 = new AdvancedModelRenderer(this, 88, 74);
		this.Lmembrane3.mirror = true;
		this.Lmembrane3.setRotationPoint(-5.6F, -0.3F, -0.3F);
		this.Lmembrane3.addBox(-7.0F, 0.0F, -13.0F, 14, 0, 12, 0.0F);
		this.setRotateAngle(Lmembrane3, 0.0F, 3.141592653589793F, 0.0F);
		this.TailFin2 = new AdvancedModelRenderer(this, 40, 87);
		this.TailFin2.setRotationPoint(0.0F, 0.0F, 0.0F);
		this.TailFin2.addBox(0.0F, 0.29F, 1.31F, 9, 0, 12, 0.0F);
		this.setRotateAngle(TailFin2, 0.0F, -0.7853981633974483F, 0.08726646259971647F);
		this.TailFin1 = new AdvancedModelRenderer(this, 40, 87);
		this.TailFin1.mirror = true;
		this.TailFin1.setRotationPoint(-0.1F, 0.0F, 0.0F);
		this.TailFin1.addBox(-9.0F, 0.3F, 1.31F, 9, 0, 12, 0.0F);
		this.setRotateAngle(TailFin1, 0.0F, 0.7853981633974483F, -0.08726646259971647F);
		this.Head = new AdvancedModelRenderer(this, 1, 100);
		this.Head.mirror = true;
		this.Head.setRotationPoint(0.5F, 1.5F, -6.3F);
		this.Head.addBox(-3.0F, -2.0F, -5.2F, 6, 4, 5, 0.0F);
		this.setRotateAngle(Head, 0.40980330836826856F, 0.0F, 0.0F);
		this.ArmR1 = new AdvancedModelRenderer(this, 132, 3);
		this.ArmR1.setRotationPoint(-2.2F, 0.0F, 2.7F);
		this.ArmR1.addBox(-9.5F, -1.0F, -2.5F, 9, 2, 4, 0.0F);
		this.setRotateAngle(ArmR1, 0.4886921905584123F, 0.06981317007977318F, -0.3490658503988659F);
		this.Spike12 = new AdvancedModelRenderer(this, 34, 34);
		this.Spike12.setRotationPoint(0.0F, -1.1F, 5.8F);
		this.Spike12.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(Spike12, 0.8178612874845427F, -0.0F, 0.0F);
		this.FingerR4 = new AdvancedModelRenderer(this, 128, 38);
		this.FingerR4.setRotationPoint(-7.5F, 0.0F, 1.3F);
		this.FingerR4.addBox(-14.0F, -0.5F, -1.0F, 14, 1, 2, 0.0F);
		this.setRotateAngle(FingerR4, 3.141592653589793F, 0.45378560551852565F, 3.141592653589793F);
		this.BodyUpper = new AdvancedModelRenderer(this, 67, 47);
		this.BodyUpper.setRotationPoint(0.0F, 0.31F, -6.69F);
		this.BodyUpper.addBox(-3.0F, -1.8F, 0.0F, 6, 7, 7, 0.0F);
		this.setRotateAngle(BodyUpper, 0.045553093477052F, -0.0F, 0.0F);
		this.FingerL4 = new AdvancedModelRenderer(this, 128, 38);
		this.FingerL4.setRotationPoint(-7.5F, 0.0F, -1.3F);
		this.FingerL4.addBox(-14.0F, -0.5F, -1.0F, 14, 1, 2, 0.0F);
		this.setRotateAngle(FingerL4, 3.141592653589793F, -0.45378560551852565F, 3.141592653589793F);
		this.FingerL3 = new AdvancedModelRenderer(this, 128, 31);
		this.FingerL3.setRotationPoint(-8.3F, 0.0F, -0.2F);
		this.FingerL3.addBox(-17.0F, -0.5F, -1.0F, 16, 1, 2, 0.0F);
		this.setRotateAngle(FingerL3, 0.0F, -1.9198621771937625F, 0.0F);
		this.Lmembrane4 = new AdvancedModelRenderer(this, 139, 86);
		this.Lmembrane4.setRotationPoint(-0.2F, 0.0F, 0.0F);
		this.Lmembrane4.addBox(-25.0F, -0.1F, -16.0F, 26, 0, 15, 0.0F);
		this.ArmL2.addChild(this.FingerL1);
		this.ArmR2.addChild(this.FingerR1);
		this.ArmR1.addChild(this.ArmR2);
		this.JawBottom.addChild(this.Teeth1);
		this.FingerR1.addChild(this.FingerR2);
		this.ClawL2.addChild(this.ClawL3);
		this.ClawR.addChild(this.ClawR2);
		this.BodyUpper.addChild(this.Neck1);
		this.Tail4.addChild(this.Spike16);
		this.ThighR.addChild(this.LegR);
		this.LegR.addChild(this.ToeR1);
		this.ArmR1.addChild(this.Rmembrane1);
		this.ClawL.addChild(this.ClawL2);
		this.ArmR2.addChild(this.Rmembrane2);
		this.Neck3.addChild(this.Spike1);
		this.Tail1.addChild(this.Tail2);
		this.LegR.addChild(this.ToeR2);
		this.JawBottom.addChild(this.Teeth2);
		this.ArmL2.addChild(this.ClawLPivot);
		this.ClawLPivot.addChild(this.ClawL);
		this.BodyUpper.addChild(this.Spike7);
		this.Tail3.addChild(this.Spike15);
		this.Tail3.addChild(this.Spike14);
		this.Neck1.addChild(this.Neck2);
		this.FingerL1.addChild(this.FingerL2);
		this.BodyLower.addChild(this.ThighR);
		this.Head.addChild(this.HornL3);
		this.Neck2.addChild(this.Neck3);
		this.FingerR4.addChild(this.Rmembrane3);
		this.Head.addChild(this.HornR);
		this.Tail4.addChild(this.Club);
		this.ArmL2.addChild(this.Lmembrane2);
		this.Neck1.addChild(this.Spike4);
		this.Head.addChild(this.HornR3);
		this.ArmR2.addChild(this.ClawRPivot);
		this.ClawRPivot.addChild(this.ClawR);
		this.BodyLower.addChild(this.ThighL);
		this.HeadFront.addChild(this.HornFront);
		this.Head.addChild(this.HornL);
		this.BodyLower.addChild(this.Spike8);
		this.Tail2.addChild(this.Tail3);
		this.Tail3.addChild(this.Spike13);
		this.BodyLower.addChild(this.Spike9);
		this.LegL.addChild(this.ToeL2);
		this.BodyUpper.addChild(this.ArmL1);
		this.HornR.addChild(this.HornR2);
		this.ArmL1.addChild(this.Lmembrane1);
		this.Head.addChild(this.HeadFront);
		this.Club.addChild(this.Spike18);
		this.Head.addChild(this.JawBottom);
		this.Tail3.addChild(this.Tail4);
		this.ThighL.addChild(this.LegL);
		this.BodyUpper.addChild(this.Spike5);
		this.Neck2.addChild(this.Spike2);
		this.BodyUpper.addChild(this.Spike6);
		this.Tail1.addChild(this.Spike10);
		this.Tail4.addChild(this.Spike17);
		this.LegR.addChild(this.ToeR3);
		this.LegL.addChild(this.ToeL3);
		this.BodyLower.addChild(this.Tail1);
		this.ArmR2.addChild(this.FingerR3);
		this.Head.addChild(this.HornR4);
		this.BodyLower.addChild(this.BodyUpper);
		this.Head.addChild(this.HornL4);
		this.FingerR1.addChild(this.Rmembrane4);
		this.FingerL1.addChild(this.Lmembrane4);
		this.HornL.addChild(this.HornL2);
		this.LegL.addChild(this.ToeL1);
		this.Neck2.addChild(this.Spike3);
		this.ArmL1.addChild(this.ArmL2);
		this.Tail2.addChild(this.Spike11);
		this.ClawR2.addChild(this.ClawR3);
		this.FingerL4.addChild(this.Lmembrane3);
		this.Club.addChild(this.TailFin2);
		this.Club.addChild(this.TailFin1);
		this.Neck3.addChild(this.Head);
		this.BodyUpper.addChild(this.ArmR1);
		this.Tail2.addChild(this.Spike12);
		this.ArmR2.addChild(this.FingerR4);
		this.ArmL2.addChild(this.FingerL4);
		this.ArmL2.addChild(this.FingerL3);
		animator = ModelAnimator.create();
		this.updateDefaultPose();
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		animate((IAnimatedEntity) entity, f, f1, f2, f3, f4, f5);
		this.BodyLower.render(f5);
	}

	public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		this.resetToDefaultPose();
		animator.update(entity);
		setRotationAngles(f, f1, f2, f3, f4, f5, (Entity) entity);
		animator.setAnimation(EntityIceDragon.ANIMATION_SPEAK);
		animator.startKeyframe(15);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.2F);
		animator.endKeyframe();
		animator.setStaticKeyframe(15);
		animator.resetKeyframe(10);
		animator.setAnimation(EntityIceDragon.ANIMATION_BITE);
		animator.startKeyframe(15);
		this.rotate(animator, Neck1, -12, 0, 0);
		this.rotate(animator, Neck2, -5, 0, 0);
		this.rotate(animator, Neck3, 5, 0, 0);
		this.rotate(animator, Head, 36, 0, 0);
		this.rotate(animator, JawBottom, 20, 0, 0);
		animator.move(JawBottom, 0, 0, 0.2F);
		animator.endKeyframe();
		animator.startKeyframe(10);
		this.rotate(animator, Neck1, -2, 0, 0);
		this.rotate(animator, Neck2, 10, 0, 0);
		this.rotate(animator, Neck3, 10, 0, 0);
		this.rotate(animator, Head, 20, 0, 0);
		this.rotate(animator, JawBottom, 20, 0, 0);
		animator.move(JawBottom, 0, 0, 0.2F);
		animator.endKeyframe();
		animator.resetKeyframe(10);
		animator.setAnimation(EntityIceDragon.ANIMATION_SHAKEPREY);
		animator.startKeyframe(15);
		this.rotate(animator, Neck1, -10F, 0, 0);
		this.rotate(animator, Neck2, 15F, 0, 0);
		this.rotate(animator, Neck3, 18F, 0, 0);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.4F);
		animator.endKeyframe();
		animator.startKeyframe(10);
		this.rotate(animator, Neck1, 0, -20, 0);
		this.rotate(animator, Neck2, 0, -20, 0);
		this.rotate(animator, Neck3, 0, -20, 0);
		this.rotate(animator, Head, 0, -20, 0);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.4F);
		animator.endKeyframe();
		animator.startKeyframe(10);
		this.rotate(animator, Neck1, 0, 20, 0);
		this.rotate(animator, Neck2, 0, 20, 0);
		this.rotate(animator, Neck3, 0, 20, 0);
		this.rotate(animator, Head, 0, 20, 0);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.4F);
		animator.endKeyframe();
		animator.startKeyframe(10);
		this.rotate(animator, Neck1, 0, -20, 0);
		this.rotate(animator, Neck2, 0, -20, 0);
		this.rotate(animator, Neck3, 0, -20, 0);
		this.rotate(animator, Head, 0, -20, 0);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.4F);
		animator.endKeyframe();
		animator.startKeyframe(10);
		this.rotate(animator, Neck1, 0, 20, 0);
		this.rotate(animator, Neck2, 0, 20, 0);
		this.rotate(animator, Neck3, 0, 20, 0);
		this.rotate(animator, Head, 0, 20, 0);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.4F);
		animator.endKeyframe();
		animator.resetKeyframe(10);
		animator.setAnimation(EntityIceDragon.ANIMATION_TAILWHACK);
		animator.startKeyframe(15);
		this.rotate(animator, BodyLower, 0, -28F, 0);
		this.rotate(animator, Tail1, 0, -15, 0);
		this.rotate(animator, Tail2, 0, -10, 0);
		this.rotate(animator, Tail3, 0, -13, 0);
		this.rotate(animator, Tail4, 0, -13, 0);
		this.rotate(animator, Club, 0, -20, 0);
		animator.endKeyframe();
		animator.setStaticKeyframe(5);
		animator.startKeyframe(10);
		this.rotate(animator, BodyLower, 0, 130F, 0);
		this.rotate(animator, Tail1, 0, 15, 0);
		this.rotate(animator, Tail2, 0, 10, 0);
		this.rotate(animator, Tail3, 0, 13, 0);
		this.rotate(animator, Tail4, 0, 13, 0);
		this.rotate(animator, Club, 0, 20, 0);
		animator.endKeyframe();
		animator.resetKeyframe(10);
		animator.setAnimation(EntityIceDragon.ANIMATION_FIRECHARGE);
		animator.startKeyframe(15);
		this.rotate(animator, Neck1, -10F, 0, 0);
		this.rotate(animator, Neck2, -7F, 0, 0);
		this.rotate(animator, Neck3, 13F, 0, 0);
		this.rotate(animator, Head, 33F, 0, 0);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.4F);
		animator.endKeyframe();
		animator.startKeyframe(15);
		this.rotate(animator, Neck1, -10F, 0, 0);
		this.rotate(animator, Neck2, 2F, 0, 0);
		this.rotate(animator, Neck3, 13F, 0, 0);
		this.rotate(animator, Head, -2F, 0, 0);
		this.rotate(animator, JawBottom, 25, 0, 0);
		animator.move(JawBottom, 0, 0, 0.4F);
		animator.endKeyframe();
		animator.resetKeyframe(10);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		float speed_walk = 0.2F;
		float speed_idle = 0.05F;
		float speed_fly = 0.35F;
		float degree_walk = 0.5F;
		float degree_idle = 0.5F;
		float degree_fly = 0.5F;
		EntityIceDragon dragon = (EntityIceDragon) entity;
		AdvancedModelRenderer[] NECK = new AdvancedModelRenderer[]{Neck2, Neck3, Head};
		AdvancedModelRenderer[] TAIL = new AdvancedModelRenderer[]{Tail1, Tail2, Tail3, Tail4, Club};
		progressRotation(HornR3, dragon.sleepProgress, -((float) Math.toRadians(3.0D)), -((float) Math.toRadians(18.0D)), 0);
		progressRotation(Rmembrane2, dragon.sleepProgress, 0, (float) Math.toRadians(35.0D), 0);
		progressRotation(Spike1, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornL3, dragon.sleepProgress, -((float) Math.toRadians(3.0D)), (float) Math.toRadians(18.0D), 0);
		progressRotation(ToeL2, dragon.sleepProgress, (float) Math.toRadians(80.0D), 0, 0);
		progressRotation(HornL, dragon.sleepProgress, (float) Math.toRadians(18.0D), (float) Math.toRadians(19.0D), (float) Math.toRadians(11.0D));
		progressRotation(Spike16, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL2, dragon.sleepProgress, 0, -((float) Math.toRadians(20.57D)), 0);
		progressRotation(Lmembrane2, dragon.sleepProgress, 0, (float) Math.toRadians(140.87D), 0);
		progressRotation(ToeL1, dragon.sleepProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(Spike5, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail2, dragon.sleepProgress, (float) Math.toRadians(7.83D), (float) Math.toRadians(10.43D), 0);
		progressRotation(Spike14, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornR2, dragon.sleepProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(Spike9, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Club, dragon.sleepProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(HeadFront, dragon.sleepProgress, -((float) Math.toRadians(1.8548013008753204D)), 0, 0);
		progressRotation(Spike10, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike4, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Neck3, dragon.sleepProgress, 0, (float) Math.toRadians(10.43D), 0);
		progressRotation(Tail3, dragon.sleepProgress, (float) Math.toRadians(5.22D), (float) Math.toRadians(20.87D), 0);
		progressRotation(Spike15, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike2, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL4, dragon.sleepProgress, (float) Math.toRadians(180.0D), -((float) Math.toRadians(18.26D)), (float) Math.toRadians(180.0D));
		progressRotation(Head, dragon.sleepProgress, -((float) Math.toRadians(10.43D)), 0, 0);
		progressRotation(ArmR1, dragon.sleepProgress, (float) Math.toRadians(4.0D), (float) Math.toRadians(4.0D), -((float) Math.toRadians(20.0D)));
		progressRotation(BodyUpper, dragon.sleepProgress, (float) Math.toRadians(20.870000000000005D), 0, 0);
		progressRotation(FingerR4, dragon.sleepProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(28.7D), (float) Math.toRadians(180.0D));
		progressRotation(Spike3, dragon.sleepProgress, (float) Math.toRadians(51.750006438508166D), 0, 0);
		progressRotation(Tail4, dragon.sleepProgress, (float) Math.toRadians(7.83D), (float) Math.toRadians(7.83D), 0);
		progressRotation(Neck1, dragon.sleepProgress, (float) Math.toRadians(18.26D), (float) Math.toRadians(13.04D), -((float) Math.toRadians(7.83D)));
		progressRotation(ToeL3, dragon.sleepProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(LegR, dragon.sleepProgress, -((float) Math.toRadians(35.0D)), 0, 0);
		progressRotation(Spike17, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail1, dragon.sleepProgress, -((float) Math.toRadians(10.43D)), (float) Math.toRadians(5.22D), (float) Math.toRadians(10.43D));
		progressRotation(Spike6, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike12, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornR, dragon.sleepProgress, (float) Math.toRadians(18.0D), -((float) Math.toRadians(19.0D)), -((float) Math.toRadians(11.0D)));
		progressRotation(FingerR2, dragon.sleepProgress, 0, (float) Math.toRadians(20.57D), 0);
		progressRotation(Rmembrane3, dragon.sleepProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D));
		progressRotation(Spike7, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Lmembrane1, dragon.sleepProgress, 0, (float) Math.toRadians(164.35D), 0);
		progressRotation(FingerR3, dragon.sleepProgress, 0, (float) Math.toRadians(112.17D), 0);
		progressRotation(ThighL, dragon.sleepProgress, -((float) Math.toRadians(31.0D)), 0, 0);
		progressRotation(ArmL1, dragon.sleepProgress, -((float) Math.toRadians(20D)), ((float) Math.toRadians(210D)), (float) Math.toRadians(20.0D));
		progressRotation(ArmR2, dragon.sleepProgress, (float) Math.toRadians(5.0D), -((float) Math.toRadians(49.0D)), 0);
		progressRotation(BodyLower, dragon.sleepProgress, -((float) Math.toRadians(13.040000000000001D)), 0, 0);
		progressRotation(FingerL3, dragon.sleepProgress, 0, -((float) Math.toRadians(112.17D)), 0);
		progressRotation(Neck2, dragon.sleepProgress, -((float) Math.toRadians(3.82D)), (float) Math.toRadians(13.04D), 0);
		progressRotation(ToeR1, dragon.sleepProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(ThighR, dragon.sleepProgress, -((float) Math.toRadians(31.0D)), 0, 0);
		progressRotation(Spike11, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL1, dragon.sleepProgress, 0, -((float) Math.toRadians(85.0D)), (float) Math.toRadians(0.9D));
		progressRotation(JawBottom, dragon.sleepProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(Spike13, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike18, dragon.sleepProgress, (float) Math.toRadians(36.86D), 0, 0);
		progressRotation(ToeR3, dragon.sleepProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(FingerR1, dragon.sleepProgress, 0, (float) Math.toRadians(85.0D), (float) Math.toRadians(0.9D));
		progressRotation(Lmembrane3, dragon.sleepProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(HornL2, dragon.sleepProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(LegL, dragon.sleepProgress, -((float) Math.toRadians(35.0D)), 0, 0);
		progressRotation(Rmembrane4, dragon.sleepProgress, 0, (float) Math.toRadians(0.2D), 0);
		progressRotation(ArmL2, dragon.sleepProgress, -((float) Math.toRadians(5.0D)), (float) Math.toRadians(49.0D), 0);
		progressRotation(Spike8, dragon.sleepProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ToeR2, dragon.sleepProgress, (float) Math.toRadians(80.0D), 0, 0);
		progressPosition(BodyLower, dragon.sleepProgress, 0, 14, -6);
		progressPosition(BodyUpper, dragon.sleepProgress, 0, 3, -6);
		progressPosition(ArmL1, dragon.sleepProgress, 2.2F, -0.75F, 2.7F);
		progressPosition(Neck1, dragon.sleepProgress, 0, -0.2F, 1.5F);
		progressPosition(Neck2, dragon.sleepProgress, 0, -1F, -3.7F);
		progressRotation(Neck1, dragon.fireBreathProgress, (float) Math.toRadians(-2.0D), 0, 0);
		progressRotation(Neck2, dragon.fireBreathProgress, (float) Math.toRadians(7.0D), 0, 0);
		progressRotation(Neck3, dragon.fireBreathProgress, (float) Math.toRadians(2.0D), 0, 0);
		progressRotation(Head, dragon.fireBreathProgress, (float) Math.toRadians(-10.0D), 0, 0);
		progressRotation(JawBottom, dragon.fireBreathProgress, (float) Math.toRadians(48.0D), 0, 0);
		progressRotation(Spike4, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(BodyUpper, dragon.hoverProgress, (float) Math.toRadians(13.040000000000001D), 0, 0);
		progressRotation(HornL3, dragon.hoverProgress, -((float) Math.toRadians(3.0D)), (float) Math.toRadians(18.0D), 0);
		progressRotation(Spike13, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ToeR1, dragon.hoverProgress, (float) Math.toRadians(90.0D), 0, -((float) Math.toRadians(3.0D)));
		progressRotation(Lmembrane3, dragon.hoverProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(ToeR3, dragon.hoverProgress, (float) Math.toRadians(90.0D), 0, (float) Math.toRadians(3.0D));
		progressRotation(LegR, dragon.hoverProgress, -((float) Math.toRadians(19.0D)), 0, 0);
		progressRotation(HornL, dragon.hoverProgress, (float) Math.toRadians(18.0D), (float) Math.toRadians(19.0D), (float) Math.toRadians(11.0D));
		progressRotation(FingerR4, dragon.hoverProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D));
		progressRotation(ArmL1, dragon.hoverProgress, -((float) Math.toRadians(8.0D)), (float) Math.toRadians(180.0D), -((float) Math.toRadians(18.0D)));
		progressRotation(ThighL, dragon.hoverProgress, (float) Math.toRadians(60.0D), 0, 0);
		progressRotation(Spike10, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike2, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Head, dragon.hoverProgress, (float) Math.toRadians(29.78D), 0, 0);
		progressRotation(ArmR2, dragon.hoverProgress, (float) Math.toRadians(10.0D), -((float) Math.toRadians(8.0D)), -((float) Math.toRadians(5.22D)));
		progressRotation(ToeL2, dragon.hoverProgress, (float) Math.toRadians(100.0D), 0, 0);
		progressRotation(FingerR2, dragon.hoverProgress, 0, (float) Math.toRadians(20.57D), 0);
		progressRotation(FingerL1, dragon.hoverProgress, 0, -((float) Math.toRadians(9.0D)), 0);
		progressRotation(FingerR3, dragon.hoverProgress, 0, (float) Math.toRadians(52.107872099509834D), 0);
		progressRotation(Spike11, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike1, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ArmR1, dragon.hoverProgress, (float) Math.toRadians(8.0D), 0, (float) Math.toRadians(18.0D));
		progressRotation(HornL2, dragon.hoverProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(Tail4, dragon.hoverProgress, (float) Math.toRadians(2.61D), 0, 0);
		progressRotation(Spike18, dragon.hoverProgress, (float) Math.toRadians(36.86D), 0, 0);
		progressRotation(Spike16, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerR1, dragon.hoverProgress, 0, (float) Math.toRadians(9.0D), 0);
		progressRotation(Spike8, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike9, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Neck1, dragon.hoverProgress, (float) Math.toRadians(2.61D), 0, 0);
		progressRotation(ToeR2, dragon.hoverProgress, (float) Math.toRadians(100.0D), 0, 0);
		progressRotation(BodyLower, dragon.hoverProgress, -((float) Math.toRadians(29.04D)), 0, 0);
		progressRotation(Spike3, dragon.hoverProgress, (float) Math.toRadians(51.750006438508166D), 0, 0);
		progressRotation(Spike14, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HeadFront, dragon.hoverProgress, -((float) Math.toRadians(1.8548013008753204D)), 0, 0);
		progressRotation(Spike17, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike15, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL2, dragon.hoverProgress, 0, -((float) Math.toRadians(20.57D)), 0);
		progressRotation(LegL, dragon.hoverProgress, -((float) Math.toRadians(19.0D)), 0, 0);
		progressRotation(Neck3, dragon.hoverProgress, (float) Math.toRadians(10.43D), 0, 0);
		progressRotation(HornR3, dragon.hoverProgress, -((float) Math.toRadians(3.0D)), -((float) Math.toRadians(18.0D)), 0);
		progressRotation(ThighR, dragon.hoverProgress, (float) Math.toRadians(60.0D), 0, 0);
		progressRotation(HornR2, dragon.hoverProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(HornR, dragon.hoverProgress, (float) Math.toRadians(18.0D), -((float) Math.toRadians(19.0D)), -((float) Math.toRadians(11.0D)));
		progressRotation(Club, dragon.hoverProgress, (float) Math.toRadians(13.04D), 0, 0);
		progressRotation(Rmembrane2, dragon.hoverProgress, 0, 0, (float) Math.toRadians(8.0D));
		progressRotation(Rmembrane4, dragon.hoverProgress, 0, (float) Math.toRadians(0.2D), 0);
		progressRotation(Lmembrane2, dragon.hoverProgress, 0, (float) Math.toRadians(180.0D), (float) Math.toRadians(8.0D));
		progressRotation(JawBottom, dragon.hoverProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(Tail2, dragon.hoverProgress, (float) Math.toRadians(2.61D), 0, 0);
		progressRotation(Spike5, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike6, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Rmembrane3, dragon.hoverProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D));
		progressRotation(Spike12, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Lmembrane1, dragon.hoverProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(Neck2, dragon.hoverProgress, (float) Math.toRadians(2.61D), 0, 0);
		progressRotation(ArmL2, dragon.hoverProgress, -((float) Math.toRadians(10.0D)), (float) Math.toRadians(8.0D), -((float) Math.toRadians(5.0D)));
		progressRotation(Tail3, dragon.hoverProgress, (float) Math.toRadians(7.83D), 0, 0);
		progressRotation(FingerL3, dragon.hoverProgress, 0, -((float) Math.toRadians(52.11D)), 0);
		progressRotation(Spike7, dragon.hoverProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL4, dragon.hoverProgress, (float) Math.toRadians(180.0D), -((float) Math.toRadians(83.48D)), (float) Math.toRadians(180.0D));
		progressRotation(ToeL1, dragon.hoverProgress, (float) Math.toRadians(90.0D), 0, -((float) Math.toRadians(3.0D)));
		progressRotation(ToeL3, dragon.hoverProgress, (float) Math.toRadians(90.0D), 0, (float) Math.toRadians(3.0D));
		progressRotation(ArmR2, dragon.flyProgress, 0, -((float) Math.toRadians(8.0D)), -((float) Math.toRadians(5.0D)));
		progressPosition(BodyLower, dragon.hoverProgress, 0, 21, 0);
		progressPosition(BodyLower, dragon.flyProgress, 0, 21, 0);
		progressRotation(FingerR2, dragon.flyProgress, 0, (float) Math.toRadians(20.57D), 0);
		progressRotation(HornR, dragon.flyProgress, (float) Math.toRadians(18.0D), -((float) Math.toRadians(19.0D)), -((float) Math.toRadians(11.0D)));
		progressRotation(Spike15, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerR1, dragon.flyProgress, 0, (float) Math.toRadians(9.0D), 0);
		progressRotation(Spike16, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Rmembrane3, dragon.flyProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D));
		progressRotation(HornL, dragon.flyProgress, (float) Math.toRadians(18.0D), (float) Math.toRadians(19.0D), (float) Math.toRadians(11.0D));
		progressRotation(Spike8, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL4, dragon.flyProgress, (float) Math.toRadians(180.0D), -((float) Math.toRadians(82.0D)), (float) Math.toRadians(180.0D));
		progressRotation(Neck3, dragon.flyProgress, (float) Math.toRadians(2.13D), 0, 0);
		progressRotation(Tail2, dragon.flyProgress, -((float) Math.toRadians(0.2600000000000019D)), 0, 0);
		progressRotation(FingerR4, dragon.flyProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D));
		progressRotation(LegL, dragon.flyProgress, -((float) Math.toRadians(19.0D)), 0, 0);
		progressRotation(FingerR3, dragon.flyProgress, 0, (float) Math.toRadians(52.107872099509834D), 0);
		progressRotation(Spike4, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail1, dragon.flyProgress, -((float) Math.toRadians(3.6328892121619076D)), 0, 0);
		progressRotation(Spike10, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike12, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ToeR1, dragon.flyProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(ToeL3, dragon.flyProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(FingerL1, dragon.flyProgress, 0, -((float) Math.toRadians(9.0D)), 0);
		progressRotation(Spike1, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ToeR3, dragon.flyProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(Spike9, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(LegR, dragon.flyProgress, -((float) Math.toRadians(19.0D)), 0, 0);
		progressRotation(Head, dragon.flyProgress, (float) Math.toRadians(5.22D), 0, 0);
		progressRotation(Lmembrane3, dragon.flyProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(HornR3, dragon.flyProgress, -((float) Math.toRadians(3.0D)), -((float) Math.toRadians(18.0D)), 0);
		progressRotation(FingerL3, dragon.flyProgress, 0, -((float) Math.toRadians(52.11D)), 0);
		progressRotation(HeadFront, dragon.flyProgress, -((float) Math.toRadians(1.8548013008753204D)), 0, 0);
		progressRotation(ArmR1, dragon.flyProgress, 0, (float) Math.toRadians(4.0D), 0);
		progressRotation(ArmL2, dragon.flyProgress, 0, (float) Math.toRadians(8.0D), -((float) Math.toRadians(5.0D)));
		progressRotation(Spike3, dragon.flyProgress, (float) Math.toRadians(51.750006438508166D), 0, 0);
		progressRotation(HornR2, dragon.flyProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(Lmembrane2, dragon.flyProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(Rmembrane2, dragon.flyProgress, 0, (float) Math.toRadians(0.0D), 0);
		progressRotation(FingerL2, dragon.flyProgress, 0, -((float) Math.toRadians(20.57D)), 0);
		progressRotation(Lmembrane1, dragon.flyProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(HornL3, dragon.flyProgress, -((float) Math.toRadians(3.0D)), (float) Math.toRadians(18.0D), 0);
		progressRotation(ArmL1, dragon.flyProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(Tail3, dragon.flyProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(Spike14, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Neck1, dragon.flyProgress, -((float) Math.toRadians(5.22D)), 0, 0);
		progressRotation(ToeL1, dragon.flyProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(Spike13, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike18, dragon.flyProgress, (float) Math.toRadians(36.86D), 0, 0);
		progressRotation(ToeL2, dragon.flyProgress, (float) Math.toRadians(100.0D), 0, 0);
		progressRotation(ThighR, dragon.flyProgress, (float) Math.toRadians(60.0D), 0, 0);
		progressRotation(Club, dragon.flyProgress, -((float) Math.toRadians(7.83D)), 0, 0);
		progressRotation(ToeR2, dragon.flyProgress, (float) Math.toRadians(100.0D), 0, 0);
		progressRotation(Spike7, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Rmembrane4, dragon.flyProgress, 0, (float) Math.toRadians(0.2D), 0);
		progressRotation(BodyUpper, dragon.flyProgress, (float) Math.toRadians(5.22D), 0, 0);
		progressRotation(ThighL, dragon.flyProgress, (float) Math.toRadians(60.0D), 0, 0);
		progressRotation(Spike2, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike17, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail4, dragon.flyProgress, (float) Math.toRadians(0.21D), 0, 0);
		progressRotation(JawBottom, dragon.flyProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(HornL2, dragon.flyProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(Spike5, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike6, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike11, dragon.flyProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike6, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerR4, dragon.modelDeadProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(28.7D), (float) Math.toRadians(180.0D));
		progressRotation(Lmembrane3, dragon.modelDeadProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(Tail1, dragon.modelDeadProgress, -((float) Math.toRadians(10.43D)), (float) Math.toRadians(5.22D), (float) Math.toRadians(10.43D));
		progressRotation(FingerL2, dragon.modelDeadProgress, 0, -((float) Math.toRadians(20.57D)), 0);
		progressRotation(JawBottom, dragon.modelDeadProgress, (float) Math.toRadians(28.7D), 0, 0);
		progressRotation(FingerL3, dragon.modelDeadProgress, 0, -((float) Math.toRadians(112.17D)), 0);
		progressRotation(Spike10, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ArmR1, dragon.modelDeadProgress, (float) Math.toRadians(4.0D), (float) Math.toRadians(10.43D), -((float) Math.toRadians(1D)));
		progressRotation(Tail3, dragon.modelDeadProgress, (float) Math.toRadians(5.22D), -((float) Math.toRadians(10.43D)), 0);
		progressRotation(Spike11, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike2, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Rmembrane3, dragon.modelDeadProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D));
		progressRotation(FingerR3, dragon.modelDeadProgress, 0, (float) Math.toRadians(112.17D), 0);
		progressRotation(Lmembrane1, dragon.modelDeadProgress, 0, (float) Math.toRadians(164.35D), 0);
		progressRotation(Spike14, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike18, dragon.modelDeadProgress, (float) Math.toRadians(36.86D), 0, 0);
		progressRotation(ClawRPivot, dragon.modelDeadProgress, (float) Math.toRadians(0.0D), (float) Math.toRadians(120.0D), (float) Math.toRadians(0.0D));
		progressRotation(Tail2, dragon.modelDeadProgress, (float) Math.toRadians(7.83D), (float) Math.toRadians(10.43D), 0);
		progressRotation(FingerR2, dragon.modelDeadProgress, 0, (float) Math.toRadians(20.57D), 0);
		progressRotation(BodyLower, dragon.modelDeadProgress, -((float) Math.toRadians(3.31485888636004D)), -((float) Math.toRadians(7.560033221147045D)), -((float) Math.toRadians(7.779576871510495D)));
		progressRotation(ToeR2, dragon.modelDeadProgress, (float) Math.toRadians(80.0D), 0, 0);
		progressRotation(Tail4, dragon.modelDeadProgress, -((float) Math.toRadians(2.61D)), (float) Math.toRadians(10.43D), 0);
		progressRotation(HornR3, dragon.modelDeadProgress, -((float) Math.toRadians(3.0D)), -((float) Math.toRadians(18.0D)), 0);
		progressRotation(Spike16, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ArmR2, dragon.modelDeadProgress, (float) Math.toRadians(5.0D), -((float) Math.toRadians(49.0D)), 0);
		progressRotation(Spike12, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL1, dragon.modelDeadProgress, 0, -((float) Math.toRadians(85.0D)), (float) Math.toRadians(0.9D));
		progressRotation(ToeL1, dragon.modelDeadProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(ToeR1, dragon.modelDeadProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(Neck3, dragon.modelDeadProgress, 0, (float) Math.toRadians(10.43D), 0);
		progressRotation(Lmembrane2, dragon.modelDeadProgress, 0, (float) Math.toRadians(140.87D), 0);
		progressRotation(Neck1, dragon.modelDeadProgress, (float) Math.toRadians(10.43D), (float) Math.toRadians(5.22D), -((float) Math.toRadians(31.3D)));
		progressRotation(LegR, dragon.modelDeadProgress, -((float) Math.toRadians(35.0D)), 0, 0);
		progressRotation(Spike8, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ClawLPivot, dragon.modelDeadProgress, (float) Math.toRadians(0.0D), -((float) Math.toRadians(120.0D)), (float) Math.toRadians(0.0D));
		progressRotation(HornR, dragon.modelDeadProgress, (float) Math.toRadians(18.0D), -((float) Math.toRadians(19.0D)), -((float) Math.toRadians(11.0D)));
		progressRotation(Spike4, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Neck2, dragon.modelDeadProgress, -((float) Math.toRadians(3.82D)), (float) Math.toRadians(13.04D), 0);
		progressRotation(FingerR1, dragon.modelDeadProgress, 0, (float) Math.toRadians(85.0D), (float) Math.toRadians(0.9D));
		progressRotation(ArmL1, dragon.modelDeadProgress, -((float) Math.toRadians(15.65D)), ((float) Math.toRadians(210.3D)), (float) Math.toRadians(32.13D));
		progressRotation(Spike17, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(BodyUpper, dragon.modelDeadProgress, 0, 0, -((float) Math.toRadians(5.219999999999998D)));
		progressRotation(Head, dragon.modelDeadProgress, -((float) Math.toRadians(5.22D)), -((float) Math.toRadians(13.04D)), -((float) Math.toRadians(20.87D)));
		progressRotation(Spike13, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ToeL3, dragon.modelDeadProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(HornL2, dragon.modelDeadProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(ThighR, dragon.modelDeadProgress, (float) Math.toRadians(31.3D), -((float) Math.toRadians(2.61D)), (float) Math.toRadians(83.48D));
		progressRotation(ToeL2, dragon.modelDeadProgress, (float) Math.toRadians(80.0D), 0, 0);
		progressRotation(Spike9, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ArmL2, dragon.modelDeadProgress, -((float) Math.toRadians(5.0D)), (float) Math.toRadians(44.35D), 0);
		progressRotation(ThighL, dragon.modelDeadProgress, (float) Math.toRadians(28.7D), (float) Math.toRadians(20.87D), -((float) Math.toRadians(60.0D)));
		progressRotation(Rmembrane2, dragon.modelDeadProgress, 0, (float) Math.toRadians(35.0D), 0);
		progressRotation(Club, dragon.modelDeadProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(HeadFront, dragon.modelDeadProgress, -((float) Math.toRadians(1.8548013008753204D)), 0, 0);
		progressRotation(ToeR3, dragon.modelDeadProgress, (float) Math.toRadians(75.0D), 0, 0);
		progressRotation(Spike7, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike5, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike3, dragon.modelDeadProgress, (float) Math.toRadians(51.750006438508166D), 0, 0);
		progressRotation(HornL3, dragon.modelDeadProgress, -((float) Math.toRadians(3.0D)), (float) Math.toRadians(18.0D), 0);
		progressRotation(HornL, dragon.modelDeadProgress, (float) Math.toRadians(18.0D), (float) Math.toRadians(19.0D), (float) Math.toRadians(11.0D));
		progressRotation(Rmembrane4, dragon.modelDeadProgress, 0, (float) Math.toRadians(0.2D), 0);
		progressRotation(LegL, dragon.modelDeadProgress, -((float) Math.toRadians(35.0D)), 0, 0);
		progressRotation(Spike15, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike1, dragon.modelDeadProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornR2, dragon.modelDeadProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(FingerL4, dragon.modelDeadProgress, (float) Math.toRadians(180.0D), -((float) Math.toRadians(18.26D)), (float) Math.toRadians(180.0D));
		progressPosition(BodyLower, dragon.modelDeadProgress, 0, 17, -6);
		progressRotation(ToeL3, dragon.ridingProgress, (float) Math.toRadians(30.0D), 0, 0);
		progressRotation(FingerR4, dragon.ridingProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(26.0D), (float) Math.toRadians(180.0D));
		progressRotation(FingerL3, dragon.ridingProgress, 0, -((float) Math.toRadians(110.0D)), 0);
		progressRotation(FingerL1, dragon.ridingProgress, 0, -((float) Math.toRadians(85.0D)), (float) Math.toRadians(0.9D));
		progressRotation(Spike2, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(JawBottom, dragon.ridingProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(ThighL, dragon.ridingProgress, (float) Math.toRadians(40.0D), 0, 0);
		progressRotation(LegL, dragon.ridingProgress, -((float) Math.toRadians(19.0D)), 0, 0);
		progressRotation(Spike8, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike9, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike6, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerR3, dragon.ridingProgress, 0, (float) Math.toRadians(110.0D), 0);
		progressRotation(HornL2, dragon.ridingProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(Rmembrane4, dragon.ridingProgress, 0, (float) Math.toRadians(0.2D), 0);
		progressRotation(Tail3, dragon.ridingProgress, (float) Math.toRadians(5.22D), 0, 0);
		progressRotation(Spike14, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ArmR2, dragon.ridingProgress, (float) Math.toRadians(5.0D), -((float) Math.toRadians(49.0D)), -((float) Math.toRadians(16.0D)));
		progressRotation(ThighR, dragon.ridingProgress, (float) Math.toRadians(40.0D), 0, 0);
		progressRotation(Club, dragon.ridingProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(Rmembrane2, dragon.ridingProgress, 0, (float) Math.toRadians(35.0D), 0);
		progressRotation(Spike17, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail2, dragon.ridingProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(Spike1, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(BodyUpper, dragon.ridingProgress, (float) Math.toRadians(5.22D), 0, 0);
		progressRotation(HornR, dragon.ridingProgress, (float) Math.toRadians(18.0D), -((float) Math.toRadians(19.0D)), -((float) Math.toRadians(11.0D)));
		progressRotation(Rmembrane3, dragon.ridingProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D));
		progressRotation(ToeR2, dragon.ridingProgress, (float) Math.toRadians(37.0D), 0, 0);
		progressRotation(Spike5, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ArmL2, dragon.ridingProgress, -((float) Math.toRadians(5.0D)), (float) Math.toRadians(49.0D), -((float) Math.toRadians(16.0D)));
		progressRotation(ToeR1, dragon.ridingProgress, (float) Math.toRadians(30.0D), 0, 0);
		progressRotation(ClawRPivot, dragon.ridingProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(50.0D), -((float) Math.toRadians(205.0D)));
		progressRotation(Spike16, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Lmembrane1, dragon.ridingProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(Spike3, dragon.ridingProgress, (float) Math.toRadians(51.750006438508166D), 0, 0);
		progressRotation(FingerL2, dragon.ridingProgress, 0, -((float) Math.toRadians(20.57D)), 0);
		progressRotation(ArmL1, dragon.ridingProgress, -((float) Math.toRadians(28.0D)), (float) Math.toRadians(120.0D), (float) Math.toRadians(48.0D));
		progressRotation(ArmR1, dragon.ridingProgress, (float) Math.toRadians(28.0D), (float) Math.toRadians(60.0D), -((float) Math.toRadians(48.0D)));
		progressRotation(HornR2, dragon.ridingProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(ToeL2, dragon.ridingProgress, (float) Math.toRadians(37.0D), 0, 0);
		progressRotation(Spike13, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail1, dragon.ridingProgress, -((float) Math.toRadians(7.83D)), 0, 0);
		progressRotation(Neck2, dragon.ridingProgress, (float) Math.toRadians(6.18D), 0, 0);
		progressRotation(Spike10, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornL3, dragon.ridingProgress, -((float) Math.toRadians(3.0D)), (float) Math.toRadians(18.0D), 0);
		progressRotation(ToeR3, dragon.ridingProgress, (float) Math.toRadians(30.0D), 0, 0);
		progressRotation(HornR3, dragon.ridingProgress, -((float) Math.toRadians(3.0D)), -((float) Math.toRadians(18.0D)), 0);
		progressRotation(LegR, dragon.ridingProgress, -((float) Math.toRadians(19.0D)), 0, 0);
		progressRotation(Lmembrane2, dragon.ridingProgress, 0, (float) Math.toRadians(145.0D), 0);
		progressRotation(BodyLower, dragon.ridingProgress, -((float) Math.toRadians(46.96D)), 0, 0);
		progressRotation(FingerR2, dragon.ridingProgress, 0, (float) Math.toRadians(20.57D), 0);
		progressRotation(Spike15, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike12, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Neck3, dragon.ridingProgress, (float) Math.toRadians(12.0D), 0, 0);
		progressRotation(ClawLPivot, dragon.ridingProgress, (float) Math.toRadians(180.0D), -((float) Math.toRadians(50.0D)), -((float) Math.toRadians(205.0D)));
		progressRotation(Spike18, dragon.ridingProgress, (float) Math.toRadians(36.86D), 0, 0);
		progressRotation(Neck1, dragon.ridingProgress, (float) Math.toRadians(10.43D), 0, 0);
		progressRotation(ToeL1, dragon.ridingProgress, (float) Math.toRadians(30.0D), 0, 0);
		progressRotation(Spike7, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HeadFront, dragon.ridingProgress, -((float) Math.toRadians(1.8548013008753204D)), 0, 0);
		progressRotation(Head, dragon.ridingProgress, (float) Math.toRadians(31.87D), 0, 0);
		progressRotation(FingerL4, dragon.ridingProgress, (float) Math.toRadians(180.0D), -((float) Math.toRadians(26.0D)), (float) Math.toRadians(180.0D));
		progressRotation(Lmembrane3, dragon.ridingProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(FingerR1, dragon.ridingProgress, 0, (float) Math.toRadians(85.0D), (float) Math.toRadians(0.9D));
		progressRotation(Spike11, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike4, dragon.ridingProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornL, dragon.ridingProgress, (float) Math.toRadians(18.0D), (float) Math.toRadians(19.0D), (float) Math.toRadians(11.0D));
		progressRotation(Spike3, dragon.swimProgress, (float) Math.toRadians(51.75D), 0, 0);
		progressRotation(Spike11, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(JawBottom, dragon.swimProgress, -((float) Math.toRadians(8.0D)), 0, 0);
		progressRotation(HornFront, dragon.swimProgress, (float) Math.toRadians(36.52D), 0, 0);
		progressRotation(Tail4, dragon.swimProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(ArmR2, dragon.swimProgress, 0, -((float) Math.toRadians(125.0D)), -((float) Math.toRadians(10.0D)));
		progressRotation(Spike1, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL4, dragon.swimProgress, (float) Math.toRadians(180.0D), -((float) Math.toRadians(5.0D)), (float) Math.toRadians(180.0D));
		progressRotation(FingerR2, dragon.swimProgress, 0, (float) Math.toRadians(20.57D), 0);
		progressRotation(Spike15, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike5, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(ThighR, dragon.swimProgress, (float) Math.toRadians(73.0D), 0, 0);
		progressRotation(HornR2, dragon.swimProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(ArmR1, dragon.swimProgress, (float) Math.toRadians(13.0D), (float) Math.toRadians(50.0D), -((float) Math.toRadians(2.0D)));
		progressRotation(HornL, dragon.swimProgress, (float) Math.toRadians(10.0D), (float) Math.toRadians(19.0D), (float) Math.toRadians(11.0D));
		progressRotation(HornL2, dragon.swimProgress, -((float) Math.toRadians(4.3D)), 0, 0);
		progressRotation(ArmL1, dragon.swimProgress, -((float) Math.toRadians(13.0D)), (float) Math.toRadians(120.0D), (float) Math.toRadians(2.0D));
		progressRotation(ThighL, dragon.swimProgress, (float) Math.toRadians(73.0D), 0, 0);
		progressRotation(BodyUpper, dragon.swimProgress, (float) Math.toRadians(5.22D), 0, 0);
		progressRotation(ToeR3, dragon.swimProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(Lmembrane3, dragon.swimProgress, 0, (float) Math.toRadians(180.0D), 0);
		progressRotation(Spike4, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerL1, dragon.swimProgress, 0, -((float) Math.toRadians(112.0D)), 0);
		progressRotation(Spike18, dragon.swimProgress, (float) Math.toRadians(23.48D), 0, 0);
		progressRotation(BodyLower, dragon.swimProgress, -((float) Math.toRadians(5.22D)), 0, 0);
		progressRotation(Spike16, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornR, dragon.swimProgress, (float) Math.toRadians(10.0D), -((float) Math.toRadians(19.0D)), -((float) Math.toRadians(11.0D)));
		progressRotation(Lmembrane1, dragon.swimProgress, -((float) Math.toRadians(10.0D)), (float) Math.toRadians(180.0D), 0);
		progressRotation(Rmembrane4, dragon.swimProgress, 0, (float) Math.toRadians(0.2D), 0);
		progressRotation(Neck3, dragon.swimProgress, (float) Math.toRadians(5.22D), 0, 0);
		progressRotation(LegL, dragon.swimProgress, -((float) Math.toRadians(18.97D)), 0, 0);
		progressRotation(FingerR3, dragon.swimProgress, 0, (float) Math.toRadians(138.0D), 0);
		progressRotation(Spike7, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornL3, dragon.swimProgress, -((float) Math.toRadians(10.0D)), (float) Math.toRadians(18.0D), 0);
		progressRotation(Rmembrane3, dragon.swimProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D));
		progressRotation(FingerR4, dragon.swimProgress, (float) Math.toRadians(180.0D), (float) Math.toRadians(5.0D), (float) Math.toRadians(180.0D));
		progressRotation(ToeL2, dragon.swimProgress, (float) Math.toRadians(100.0D), 0, 0);
		progressRotation(Spike8, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail3, dragon.swimProgress, (float) Math.toRadians(0.57D), 0, 0);
		progressRotation(ToeR1, dragon.swimProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(ToeR2, dragon.swimProgress, (float) Math.toRadians(100.0D), 0, 0);
		progressRotation(Spike10, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike14, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(FingerR1, dragon.swimProgress, 0, (float) Math.toRadians(112.0D), 0);
		progressRotation(LegR, dragon.swimProgress, -((float) Math.toRadians(18.97D)), 0, 0);
		progressRotation(ArmL2, dragon.swimProgress, 0, (float) Math.toRadians(125.0D), -((float) Math.toRadians(10.0D)));
		progressRotation(Spike12, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Rmembrane2, dragon.swimProgress, 0, (float) Math.toRadians(65.0D), 0);
		progressRotation(Spike17, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Neck1, dragon.swimProgress, -((float) Math.toRadians(2.61D)), 0, 0);
		progressRotation(Rmembrane1, dragon.swimProgress, -((float) Math.toRadians(10.43D)), 0, 0);
		progressRotation(HornR4, dragon.swimProgress, (float) Math.toRadians(23.48D), -((float) Math.toRadians(15.0D)), 0);
		progressRotation(FingerL3, dragon.swimProgress, 0, -((float) Math.toRadians(138.0D)), 0);
		progressRotation(FingerL2, dragon.swimProgress, 0, -((float) Math.toRadians(20.57D)), 0);
		progressRotation(Tail1, dragon.swimProgress, -((float) Math.toRadians(3.63D)), 0, 0);
		progressRotation(Lmembrane2, dragon.swimProgress, 0, (float) Math.toRadians(115.0D), 0);
		progressRotation(Spike6, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Spike13, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(Tail2, dragon.swimProgress, -((float) Math.toRadians(0.26D)), 0, 0);
		progressRotation(Spike2, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		progressRotation(HornR3, dragon.swimProgress, -((float) Math.toRadians(10.0D)), -((float) Math.toRadians(18.0D)), 0);
		progressRotation(ToeL1, dragon.swimProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(Club, dragon.swimProgress, (float) Math.toRadians(5.22D), 0, 0);
		progressRotation(ToeL3, dragon.swimProgress, (float) Math.toRadians(90.0D), 0, 0);
		progressRotation(Spike9, dragon.swimProgress, (float) Math.toRadians(46.86D), 0, 0);
		if (dragon.isModelDead()) {
			return;
		}
		if (dragon.width >= 2 && dragon.onGround) {
			LegArticulator.articulateQuadruped(dragon, dragon.legSolver, BodyLower, Neck1,
					ThighL, LegL, ThighR, LegR, ArmL1, ArmL2, ArmR1, ArmR2,
					0.25F, 0.1F, 0.15F, -0.10F,
					Minecraft.getMinecraft().getRenderPartialTicks()
			);
		}
		if (dragon.isHovering() || dragon.isFlying()) {
			dragon.roll_buffer.applyChainFlapBuffer(new AdvancedModelRenderer[]{BodyLower});
			this.bob(BodyLower, -speed_fly, degree_fly * 5, false, entity.ticksExisted, 1);
			this.walk(BodyLower, speed_fly, (float) (degree_fly * 0.15), false, 0, 0, entity.ticksExisted, 1);
			this.walk(BodyUpper, speed_fly, (float) (degree_fly * -0.15), false, 0, 0, entity.ticksExisted, 1);
			this.chainWave(TAIL, speed_fly, degree_fly * 0.1F, -2, entity.ticksExisted, 1);
			this.chainSwing(NECK, speed_fly, degree_fly * 0.15F, -2, entity.ticksExisted, 1);
			this.walk(LegL, speed_fly, degree_fly * -0.5F, false, 1, 0F, entity.ticksExisted, 1);
			this.walk(LegR, speed_fly, degree_fly * 0.5F, false, 1, 0F, entity.ticksExisted, 1);
			this.flap(ToeL3, speed_fly, degree_fly * -0.5F, true, 1, -0.2F, entity.ticksExisted, 1);
			this.flap(ToeR3, speed_fly, degree_fly * 0.5F, false, 1, 0.2F, entity.ticksExisted, 1);
			this.flap(ToeL1, speed_fly, degree_fly * -0.5F, false, 1, -0.2F, entity.ticksExisted, 1);
			this.flap(ToeR1, speed_fly, degree_fly * 0.5F, true, 1, 0.2F, entity.ticksExisted, 1);
			AdvancedModelRenderer[] PARTS1 = new AdvancedModelRenderer[]{ClawL3, Lmembrane3, ArmR1, FingerL2, FingerR4, ArmL1, FingerR1, Lmembrane2, ClawL, FingerR3, FingerL3, FingerL1, Rmembrane2, Lmembrane4, Rmembrane3, FingerL4, Lmembrane1, ClawR, Rmembrane4, ClawR2, ClawR3, ClawL2, FingerR2, Rmembrane1, ArmL2, ArmR2};
			AdvancedModelRenderer[] PARTS2 = new AdvancedModelRenderer[]{ClawL2, Rmembrane2, FingerL1, ClawL3, FingerR4, FingerR2, FingerR3, Rmembrane1, ArmL1, ArmR1, Rmembrane3, Lmembrane3, Lmembrane1, FingerL2, ArmL2, FingerL4, ClawR3, FingerL3, FingerR1, ArmR2, Rmembrane4, ClawL, Lmembrane4, ClawR2, Lmembrane2, ClawR};
			AdvancedModelRenderer[] PARTS3 = new AdvancedModelRenderer[]{FingerL2, Lmembrane1, ArmL2, ClawL3, ClawR, Lmembrane3, FingerR1, Lmembrane4, ClawL, Rmembrane2, ArmR1, FingerL4, Rmembrane1, FingerL1, Rmembrane4, ArmR2, ClawL2, Rmembrane3, ClawR2, FingerR3, ArmL1, FingerL3, FingerR4, ClawR3, FingerR2, Lmembrane2};
			AdvancedModelRenderer[] PARTS4 = new AdvancedModelRenderer[]{Lmembrane4, Rmembrane2, Lmembrane1, ClawR3, FingerL1, ClawL2, ClawL, FingerR2, FingerL3, Lmembrane3, ClawR, Lmembrane2, ArmL1, FingerR3, FingerR1, Rmembrane4, ClawL3, Rmembrane3, Rmembrane1, FingerR4, FingerL4, ClawR2, ArmR2, ArmL2, ArmR1, FingerL2};
			AdvancedModelRenderer[] PARTS5 = new AdvancedModelRenderer[]{ClawR3, Rmembrane2, Lmembrane1, Lmembrane4, Rmembrane3, ClawL3, ClawL, Lmembrane2, FingerL3, FingerL4, FingerL2, FingerR2, ArmL2, ArmR1, Lmembrane3, FingerR4, ArmL1, FingerR3, ArmR2, ClawL2, Rmembrane4, ClawR, FingerL1, ClawR2, Rmembrane1, FingerR1};
			AdvancedModelRenderer[] PARTS6 = new AdvancedModelRenderer[]{ArmL2, ClawR, ClawR2, Lmembrane2, Rmembrane1, FingerL4, ArmR2, ClawR3, FingerR4, FingerL3, FingerR1, ArmL1, Rmembrane3, FingerL2, ArmR1, ClawL3, Lmembrane3, Rmembrane2, Rmembrane4, FingerR3, ClawL2, ClawL, FingerR2, Lmembrane1, Lmembrane4, FingerL1};
			Vec3[] POSITIONS1 = new Vec3[]{new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(15.0D), (float) Math.toRadians(180.0D), 0), new Vec3(0, (float) Math.toRadians(4.0D), (float) Math.toRadians(25.0D)), new Vec3(0, -((float) Math.toRadians(20.57D)), 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(180.0D), -((float) Math.toRadians(25.0D))), new Vec3(0, (float) Math.toRadians(9.0D), -((float) Math.toRadians(30.0D))), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(60.0D)), (float) Math.toRadians(180.0D)), new Vec3((float) Math.toRadians(18.0D), (float) Math.toRadians(52.11D), -((float) Math.toRadians(13.0D))), new Vec3(-((float) Math.toRadians(18.0D)), -((float) Math.toRadians(52.11D)), -((float) Math.toRadians(13.0D))), new Vec3(0, -((float) Math.toRadians(9.0D)), -((float) Math.toRadians(30.0D))), new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(195.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D)), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(82.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(60.0D), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(0.2D), 0), new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(20.57D), 0), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(8.0D), -((float) Math.toRadians(20.0D))), new Vec3(0, -((float) Math.toRadians(8.0D)), -((float) Math.toRadians(20.0D)))};
			Vec3[] POSITIONS2 = new Vec3[]{new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3(0, -((float) Math.toRadians(9.0D)), -((float) Math.toRadians(40.0D))), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(20.57D), 0), new Vec3((float) Math.toRadians(18.0D), (float) Math.toRadians(52.11D), -((float) Math.toRadians(21.0D))), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(180.0D), -((float) Math.toRadians(50.0D))), new Vec3(0, (float) Math.toRadians(4.0D), (float) Math.toRadians(50.0D)), new Vec3((float) Math.toRadians(200.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D)), new Vec3((float) Math.toRadians(20.0D), (float) Math.toRadians(180.0D), 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, -((float) Math.toRadians(20.57D)), 0), new Vec3(0, (float) Math.toRadians(8.0D), -((float) Math.toRadians(35.0D))), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(82.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(-((float) Math.toRadians(18.0D)), -((float) Math.toRadians(52.11D)), -((float) Math.toRadians(21.0D))), new Vec3(0, (float) Math.toRadians(9.0D), -((float) Math.toRadians(40.0D))), new Vec3(0, -((float) Math.toRadians(8.0D)), -((float) Math.toRadians(35.0D))), new Vec3(0, (float) Math.toRadians(0.2D), 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(60.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(60.0D), (float) Math.toRadians(180.0D))};
			Vec3[] POSITIONS3 = new Vec3[]{new Vec3(0, -((float) Math.toRadians(20.57D)), 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, (float) Math.toRadians(8.0D), -((float) Math.toRadians(25.0D))), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(60.0D), (float) Math.toRadians(180.0D)), new Vec3((float) Math.toRadians(13.0D), (float) Math.toRadians(180.0D), 0), new Vec3(0, (float) Math.toRadians(9.0D), -((float) Math.toRadians(25.0D))), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(60.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(4.0D), (float) Math.toRadians(60.0D)), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(82.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(0, -((float) Math.toRadians(9.0D)), -((float) Math.toRadians(25.0D))), new Vec3(0, (float) Math.toRadians(0.2D), 0), new Vec3(0, -((float) Math.toRadians(8.0D)), -((float) Math.toRadians(25.0D))), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(193.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(-((float) Math.toRadians(8.0D)), (float) Math.toRadians(52.11D), -((float) Math.toRadians(10.0D))), new Vec3(0, (float) Math.toRadians(180.0D), -((float) Math.toRadians(60.0D))), new Vec3(-((float) Math.toRadians(8.0D)), -((float) Math.toRadians(52.11D)), -((float) Math.toRadians(10.0D))), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(20.57D), 0), new Vec3(0, (float) Math.toRadians(180.0D), 0)};
			Vec3[] POSITIONS4 = new Vec3[]{new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, 0, 0), new Vec3(0, -((float) Math.toRadians(9.0D)), 0), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(60.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(20.57D), 0), new Vec3(0, -((float) Math.toRadians(52.11D)), 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(60.0D), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, (float) Math.toRadians(180.0D), -((float) Math.toRadians(70.0D))), new Vec3(0, (float) Math.toRadians(52.11D), 0), new Vec3(0, (float) Math.toRadians(9.0D), 0), new Vec3(0, (float) Math.toRadians(0.2D), 0), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D)), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(82.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(0, -((float) Math.toRadians(8.0D)), -((float) Math.toRadians(15.0D))), new Vec3(0, (float) Math.toRadians(8.0D), -((float) Math.toRadians(15.0D))), new Vec3(0, (float) Math.toRadians(4.0D), (float) Math.toRadians(70.0D)), new Vec3(0, -((float) Math.toRadians(20.57D)), 0)};
			Vec3[] POSITIONS5 = new Vec3[]{new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(60.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, -((float) Math.toRadians(52.11D)), 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(82.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, -((float) Math.toRadians(20.57D)), 0), new Vec3(0, (float) Math.toRadians(20.57D), 0), new Vec3(0, (float) Math.toRadians(16.0D), -((float) Math.toRadians(5.0D))), new Vec3(0, (float) Math.toRadians(20.0D), -((float) Math.toRadians(20.0D))), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(160.0D), (float) Math.toRadians(20.0D)), new Vec3(0, (float) Math.toRadians(52.107872099509834D), 0), new Vec3(0, -((float) Math.toRadians(16.0D)), -((float) Math.toRadians(5.0D))), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(0.2D), 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(60.0D), (float) Math.toRadians(180.0D)), new Vec3(0, -((float) Math.toRadians(25.0D)), -((float) Math.toRadians(10.0D))), new Vec3(0, 0, 0), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(25.0D), -((float) Math.toRadians(10.0D)))};
			Vec3[] POSITIONS6 = new Vec3[]{new Vec3(0, (float) Math.toRadians(16.0D), -((float) Math.toRadians(25.0D))), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(60.0D), (float) Math.toRadians(180.0D)), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(82.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, -((float) Math.toRadians(16.0D)), -((float) Math.toRadians(25.0D))), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), (float) Math.toRadians(82.0D), (float) Math.toRadians(180.0D)), new Vec3((float) Math.toRadians(3.0D), -((float) Math.toRadians(52.11D)), -((float) Math.toRadians(10.0D))), new Vec3(0, (float) Math.toRadians(25.0D), -((float) Math.toRadians(25.0D))), new Vec3(0, (float) Math.toRadians(160.0D), (float) Math.toRadians(15.0D)), new Vec3((float) Math.toRadians(193.0D), (float) Math.toRadians(180.0D), (float) Math.toRadians(180.0D)), new Vec3(0, -((float) Math.toRadians(20.57D)), 0), new Vec3(0, (float) Math.toRadians(20.0D), -((float) Math.toRadians(15.0D))), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(13.0D), (float) Math.toRadians(180.0D), 0), new Vec3(0, 0, 0), new Vec3(0, (float) Math.toRadians(0.2D), 0), new Vec3((float) Math.toRadians(3.0D), (float) Math.toRadians(52.11D), -((float) Math.toRadians(10.0D))), new Vec3(0, 0, 0), new Vec3((float) Math.toRadians(180.0D), -((float) Math.toRadians(60.0D)), (float) Math.toRadians(180.0D)), new Vec3(0, (float) Math.toRadians(20.57D), 0), new Vec3(0, (float) Math.toRadians(180.0D), 0), new Vec3(0, 0, 0), new Vec3(0, -((float) Math.toRadians(25.0D)), -((float) Math.toRadians(25.0D)))};
			Vec3[][] POSITIONS = new Vec3[][]{POSITIONS1, POSITIONS2, POSITIONS3, POSITIONS4, POSITIONS5, POSITIONS6};
			AdvancedModelRenderer[][] PARTS = new AdvancedModelRenderer[][]{PARTS1, PARTS2, PARTS3, PARTS4, PARTS5, PARTS6};
			int prevIndex = (dragon.flightCycle / 3) - 1;
			if (prevIndex < 0) {
				prevIndex = 5;
			}
			Vec3[] prevPosition = POSITIONS[prevIndex];
			Vec3[] currentPosition = POSITIONS[dragon.flightCycle / 3];
			AdvancedModelRenderer[] prevSet = PARTS[prevIndex];
			AdvancedModelRenderer[] currentSet = PARTS[dragon.flightCycle / 3];
			float delta = (dragon.flightCycle / 3.0F) % 1.0F + (LLibrary.PROXY.getPartialTicks() / 3.0F);
			for (int index = 0; index < currentSet.length; index++) {
				AdvancedModelRenderer box = currentSet[index];
				if (box != this.ClawL && box != this.ClawR) {
					int prevPartIndex = Arrays.asList(prevSet).indexOf(box);
					float prevX = prevPosition[prevPartIndex].x;
					float prevY = prevPosition[prevPartIndex].y;
					float prevZ = prevPosition[prevPartIndex].z;
					float x = currentPosition[index].x;
					float y = currentPosition[index].y;
					float z = currentPosition[index].z;
					this.setRotateAngle(box, prevX + delta * (x - prevX), prevY + delta * (y - prevY), prevZ + delta * (z - prevZ));
				}
			}
		} else {
			this.walk(ThighR, speed_walk, degree_walk * 1.2F, true, 0, 0F, f, f1);
			this.walk(LegR, speed_walk, degree_walk * 0.7F, true, 0, -0.2F, f, f1);
			this.walk(ToeR1, -speed_walk * 2, degree_walk * 0.7F, false, -0.7F, 0.4F, f, f1);
			this.walk(ToeR2, -speed_walk * 2, degree_walk * 0.7F, false, -0.7F, 0.4F, f, f1);
			this.walk(ToeR3, -speed_walk * 2, degree_walk * 0.7F, false, -0.7F, 0.4F, f, f1);
			this.walk(ThighL, speed_walk, degree_walk * 1.2F, false, 0, 0F, f, f1);
			this.walk(LegL, speed_walk, degree_walk * 0.7F, false, 0, 0.2F, f, f1);
			this.walk(ToeL1, -speed_walk * 2, degree_walk * 0.7F, false, 0.7F, 0.4F, f, f1);
			this.walk(ToeL2, -speed_walk * 2, degree_walk * 0.7F, false, 0.7F, 0.4F, f, f1);
			this.walk(ToeL3, -speed_walk * 2, degree_walk * 0.7F, false, 0.7F, 0.4F, f, f1);
			this.swing(ArmR1, speed_walk, degree_walk * 1.2F, false, 0, 0F, f, f1);
			this.swing(ArmL1, speed_walk, degree_walk * 1.2F, false, 0, 0F, f, f1);
			this.flap(ClawL, speed_walk, degree_walk * 1.2F, true, 0, 0.5F, f, f1);
			this.flap(ClawR, speed_walk, degree_walk * 1.2F, false, 0, -0.5F, f, f1);
		}
		if (!dragon.isRiding() || dragon.getAttackTarget() == null || dragon.getAttackTarget() != null && !dragon.getAttackTarget().isRidingOrBeingRiddenBy(dragon)) {
			this.faceTarget(f3, f4, 3, NECK);
		}
		this.bob(BodyLower, speed_walk * 2, degree_walk * 1.7F, false, f, f1);
		this.bob(ThighR, speed_walk, degree_walk * 1.7F, false, f, f1);
		this.bob(ThighL, speed_walk, degree_walk * 1.7F, false, f, f1);
		this.chainSwing(TAIL, speed_walk, degree_walk * 0.25F, -2, f, f1);
		this.chainWave(TAIL, speed_walk, degree_walk * 0.15F, 2, f, f1);
		this.chainSwing(NECK, speed_walk, degree_walk * 0.15F, 2, f, f1);
		this.chainWave(NECK, speed_walk, degree_walk * 0.05F, -2, f, f1);
		this.bob(BodyLower, speed_idle, degree_idle * 1.3F, false, entity.ticksExisted, 1);
		this.bob(ThighR, speed_idle, -degree_idle * 1.3F, false, entity.ticksExisted, 1);
		this.bob(ThighL, speed_idle, -degree_idle * 1.3F, false, entity.ticksExisted, 1);
		this.bob(ArmL1, speed_idle, -degree_idle * 1.3F, false, entity.ticksExisted, 1);
		this.bob(ArmR1, speed_idle, -degree_idle * 1.3F, false, entity.ticksExisted, 1);
		this.chainSwing(TAIL, speed_idle, degree_idle * 0.25F, -2, entity.ticksExisted, 1);
		this.chainWave(TAIL, speed_idle, degree_idle * 0.15F, -2, entity.ticksExisted, 1);
		this.chainWave(NECK, speed_idle, degree_idle * -0.15F, -3, entity.ticksExisted, 1);
		this.walk(Neck1, speed_idle, degree_idle * 0.05F, false, 0, 0, entity.ticksExisted, 1);
	}

	public void renderStatue() {
		this.resetToDefaultPose();
		this.BodyLower.render(0.0625F);
	}
}
